[build-system]
requires = ["setuptools>=40.8.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "easy_graphql_server"
description = "easy way to expose a database in GraphQL, using ORM models and web frameworks (so far only Django is supported, but SQLAlchemy & Flask will soon come)"
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Developers',
    'Topic :: Software Development :: Libraries',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
dependencies = [
    'graphql-core==3.1.7'
]
dynamic = ["version", "readme"]

[tool.setuptools.dynamic]
version = {attr = "easy_graphql_server.__version__"}
readme = {file = ["README.md"]}

[tool.setuptools.packages.find]
where = ["src"]
include = ["easy_graphql_server*"]
exclude = ["easy_graphql_server.tests*"]

[project.optional-dependencies]
tests = [
    'pytest',
    'pytest-django',
    'mypy',
    'coverage',
    'faker==11.1.0',
    'flask==2.0.2',
    'flask-login==0.5.0',
    'django==3.2',
    'Werkzeug~=2.0.0',
    'Django'
]
lint = ['black', 'pylint', 'isort', 'pre-commit', 'pre-commit-hooks']
docs = ['Sphinx', 'sphinx-design', 'furo']

[tool.pylint.main]
max-returns = 2

[tool.pylint.exceptions]
max-line-length = 88

[tool.pylint."message control"]
disable = []

[tool.pylint.reports]
score = true

[tool.isort]
profile = "black"
